# RSS収集テストワークフロー
# 手動実行専用（設定確認用）

name: 🧪 RSS Collection Test

on:
  workflow_dispatch:
    inputs:
      test_mode:
        description: 'テストモード'
        required: true
        default: 'quick'
        type: choice
        options:
        - quick
        - full

jobs:
  test-rss:
    name: 🧪 RSS収集テスト
    runs-on: ubuntu-latest
    timeout-minutes: 10
    
    steps:
    - name: 🚀 テスト開始
      run: |
        echo "🧪 RSS収集テストを開始します"
        echo "📅 実行時刻: $(date '+%Y-%m-%d %H:%M:%S UTC')"
        echo "🎯 テストモード: ${{ github.event.inputs.test_mode }}"
    
    - name: 🔗 接続テスト
      run: |
        echo "🔍 アプリケーションの接続をテスト中..."
        
        # ヘルスチェック（もしあれば）
        if curl -f -s "${{ secrets.RSS_COLLECTION_URL }}" > /dev/null; then
          echo "✅ アプリケーションは正常に動作中"
        else
          echo "⚠️ アプリケーションに接続できません"
          echo "🔗 URL: ${{ secrets.RSS_COLLECTION_URL }}"
        fi
    
    - name: 📡 RSS収集テスト実行
      run: |
        echo "📡 RSS収集APIをテスト中..."
        
        response=$(curl -X GET "${{ secrets.RSS_COLLECTION_URL }}/api/cron" \
          -H "Content-Type: application/json" \
          -w "HTTPSTATUS:%{http_code}" \
          --max-time 300 \
          --silent)
        
        http_code=$(echo $response | tr -d '\n' | sed -e 's/.*HTTPSTATUS://')
        body=$(echo $response | sed -e 's/HTTPSTATUS:.*//g')
        
        if [ $http_code -eq 200 ]; then
          echo "✅ RSS収集テスト成功!"
          echo "📊 HTTPステータス: $http_code"
        else
          echo "❌ RSS収集テスト失敗"
          echo "📊 HTTPステータス: $http_code"
          echo "📄 エラー内容: $body"
        fi
    
    - name: 🎉 テスト完了
      run: |
        echo "🎉 RSS収集テスト完了!"
        echo "⏰ 完了時刻: $(date '+%Y-%m-%d %H:%M:%S UTC')"